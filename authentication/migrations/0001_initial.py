# Generated by Django 3.2 on 2021-04-24 21:12

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='mot de passe')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='dernière connexion')),
                ('is_superuser', models.BooleanField(default=False, help_text='Désigne que l’utilisateur a toutes les permissions sans les assigner explicitement.', verbose_name='statut super-utilisateur')),
                ('username', models.CharField(error_messages={'unique': 'Un utilisateur avec ce nom existe déjà'}, help_text='Obligatoire. 150 caractères maximum. Lettres, chiffres et @/./+/-/_ seulement.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='nom d’utilisateur')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='prénom')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='nom de famille')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='adresse e-mail')),
                ('is_staff', models.BooleanField(default=False, help_text='Désigne si l’utilisateur peut se connecter à l’interface administrateur.', verbose_name='statut personnel')),
                ('is_active', models.BooleanField(default=True, help_text='Désigne si l’utilisateur doit être considéré comme actif. Décochez cette case au lieu de supprimer des comptes.', verbose_name='actif')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date d’inscription')),
                ('profile_photo', models.ImageField(upload_to='')),
                ('role', models.CharField(choices=[('CREATOR', 'Créateur'), ('SUBSCRIBER', 'Abonné')], max_length=30)),
                ('groups', models.ManyToManyField(blank=True, help_text='Les groupes auxquels appartient l’utilisateur. Un utilisateur obtiendra toutes les permissions associées à chacun de ses groupes.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groupes')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissions spécifiques à cet utilisateur.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'utilisateur',
                'verbose_name_plural': 'utilisateurs',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
